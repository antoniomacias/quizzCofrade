package com.gabantdev.quizzcofrade.localdb;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig usuarioDBDaoConfig;
    private final DaoConfig hermandadDBDaoConfig;
    private final DaoConfig hermandadDBTDaoConfig;
    private final DaoConfig pasosDBDaoConfig;
    private final DaoConfig pasosDBLDaoConfig;
    private final DaoConfig marchaDBDaoConfig;
    private final DaoConfig rankingDBDaoConfig;
    private final DaoConfig usuariosHermandadesDBDaoConfig;

    private final UsuarioDBDao usuarioDBDao;
    private final HermandadDBDao hermandadDBDao;
    private final HermandadDBDao hermandadDBTDao;
    private final PasosDBDao pasosDBDao;
    private final PasosDBDao pasosDBLDao;
    private final MarchaDBDao marchaDBDao;
    private final RankingDBDao rankingDBDao;
    private final UsuariosHermandadesDBDao usuariosHermandadesDBDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        usuarioDBDaoConfig = daoConfigMap.get(UsuarioDBDao.class).clone();
        usuarioDBDaoConfig.initIdentityScope(type);

        hermandadDBDaoConfig = daoConfigMap.get(HermandadDBDao.class).clone();
        hermandadDBDaoConfig.initIdentityScope(type);

        hermandadDBTDaoConfig = daoConfigMap.get(HermandadDBTDao.class).clone();
        hermandadDBTDaoConfig.initIdentityScope(type);

        pasosDBDaoConfig = daoConfigMap.get(PasosDBDao.class).clone();
        pasosDBDaoConfig.initIdentityScope(type);

        pasosDBLDaoConfig = daoConfigMap.get(PasosDBLDao.class).clone();
        pasosDBLDaoConfig.initIdentityScope(type);

        marchaDBDaoConfig = daoConfigMap.get(MarchaDBDao.class).clone();
        marchaDBDaoConfig.initIdentityScope(type);

        rankingDBDaoConfig = daoConfigMap.get(RankingDBDao.class).clone();
        rankingDBDaoConfig.initIdentityScope(type);

        usuariosHermandadesDBDaoConfig = daoConfigMap.get(UsuariosHermandadesDBDao.class).clone();
        usuariosHermandadesDBDaoConfig.initIdentityScope(type);

        usuarioDBDao = new UsuarioDBDao(usuarioDBDaoConfig, this);
        hermandadDBDao = new HermandadDBDao(hermandadDBDaoConfig, this);
        hermandadDBTDao = new HermandadDBDao(hermandadDBTDaoConfig, this);
        pasosDBDao = new PasosDBDao(pasosDBDaoConfig, this);
        pasosDBLDao = new PasosDBDao(pasosDBLDaoConfig, this);
        marchaDBDao = new MarchaDBDao(marchaDBDaoConfig, this);
        rankingDBDao = new RankingDBDao(rankingDBDaoConfig, this);
        usuariosHermandadesDBDao = new UsuariosHermandadesDBDao(usuariosHermandadesDBDaoConfig, this);

        registerDao(UsuarioDB.class, usuarioDBDao);
        registerDao(HermandadDB.class, hermandadDBDao);
        registerDao(HermandadDB.class, hermandadDBTDao);
        registerDao(PasosDB.class, pasosDBDao);
        registerDao(PasosDB.class, pasosDBLDao);
        registerDao(MarchaDB.class, marchaDBDao);
        registerDao(RankingDB.class, rankingDBDao);
        registerDao(UsuariosHermandadesDB.class, usuariosHermandadesDBDao);
    }
    
    public void clear() {
        usuarioDBDaoConfig.getIdentityScope().clear();
        hermandadDBDaoConfig.getIdentityScope().clear();
        hermandadDBTDaoConfig.getIdentityScope().clear();
        pasosDBDaoConfig.getIdentityScope().clear();
        pasosDBLDaoConfig.getIdentityScope().clear();
        marchaDBDaoConfig.getIdentityScope().clear();
        rankingDBDaoConfig.getIdentityScope().clear();
        usuariosHermandadesDBDaoConfig.getIdentityScope().clear();
    }

    public UsuarioDBDao getUsuarioDBDao() {
        return usuarioDBDao;
    }

    public HermandadDBDao getHermandadDBDao() {
        return hermandadDBDao;
    }

    public HermandadDBDao getHermandadDBTDao() {
        return hermandadDBTDao;
    }

    public PasosDBDao getPasosDBDao() {
        return pasosDBDao;
    }

    public PasosDBDao getPasosDBLDao() {
        return pasosDBLDao;
    }

    public MarchaDBDao getMarchaDBDao() {
        return marchaDBDao;
    }

    public RankingDBDao getRankingDBDao() {
        return rankingDBDao;
    }

    public UsuariosHermandadesDBDao getUsuariosHermandadesDBDao() {
        return usuariosHermandadesDBDao;
    }

}
